{"version":3,"sources":["practice/MealForm.js","practice/MealItem.js","practice/MealRandom.js","practice/MealList.js","App.js","reportWebVitals.js","index.js"],"names":["MealForm","props","useState","choose","setChoose","inputRef","useRef","useEffect","current","focus","justify","xs","sm","md","onSubmit","e","preventDefault","id","Math","floor","random","text","ref","type","className","value","onChange","target","name","placeholder","MealItem","chooses","removeChoose","map","index","onClick","MealRandom","randomChoose","result","MealList","setChooses","setResult","test","allChooses","removeArr","filter","randomResult","length","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yOAgDeA,MA7Cf,SAAkBC,GAAQ,IAAD,EACKC,mBAAS,IADd,mBAChBC,EADgB,KACRC,EADQ,KAGjBC,EAAWC,iBAAO,MAqBxB,OAnBAC,qBAAU,WACRF,EAASG,QAAQC,WAmBjB,cAAC,IAAD,CAAKC,QAAQ,SAAb,SACE,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,SACE,uBAAMC,SAdS,SAAAC,GACnBA,EAAEC,iBAEFf,EAAMa,SAAS,CACbG,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMlB,IAGRC,EAAU,KAMN,UACE,uBACEkB,IAAKjB,EACLkB,KAAK,OACLC,UAAU,gBACVC,MAAOtB,EACPuB,SAxBgB,SAAAX,GACxBX,EAAUW,EAAEY,OAAOF,QAwBXG,KAAK,OACLC,YAAY,kBAGd,wBAAQL,UAAU,WAAlB,yB,QCnBKM,MAlBf,YAA8C,IAA1BC,EAAyB,EAAzBA,QAASC,EAAgB,EAAhBA,aAC3B,OAAOD,EAAQE,KAAI,SAAC9B,EAAQ+B,GAAT,OACjB,sBAAKV,UAAU,SAAf,UACE,qBAAqBA,UAAU,eAA/B,SACGrB,EAAOkB,MADAlB,EAAOc,IAGjB,qBAAKO,UAAU,eAAf,SACE,cAAC,IAAD,CACEW,QAAS,WACPH,EAAa7B,EAAOc,KAEtBO,UAAU,qBATaU,OCiBlBE,MArBf,YAAwD,IAAlCL,EAAiC,EAAjCA,QAASM,EAAwB,EAAxBA,aAAcC,EAAU,EAAVA,OAC3C,OACE,cAAC,IAAD,CAAK5B,QAAQ,SAAb,SACE,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,SACE,sBAAKW,UAAU,gBAAf,UACE,wBACEA,UAAU,cACVW,QAAS,WACPE,EAAaN,IAHjB,0BASA,qBAAKP,UAAU,iBAAf,SAAiCc,EAAOjB,e,YC0BnCkB,MAnCf,WAAqB,IAAD,EACYrC,mBAAS,IADrB,mBACX6B,EADW,KACFS,EADE,OAEUtC,mBAAS,IAFnB,mBAEXoC,EAFW,KAEHG,EAFG,KAqBlB,OACE,cAAC,IAAD,CAAK/B,QAAQ,SAAb,SACE,cAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,GAAzB,SACE,sBAAKW,UAAU,aAAf,UACE,qDACA,cAAC,EAAD,CAAUV,SAvBA,SAAAX,GAChB,GAAKA,EAAOkB,OAAQ,QAAQqB,KAAKvC,EAAOkB,MAAxC,CAGA,IAAMsB,EAAU,CAAIxC,GAAJ,mBAAe4B,IAC/BS,EAAWG,OAmBL,cAAC,EAAD,CAAUZ,QAASA,EAASC,aAjBf,SAAAf,GACnB,IAAM2B,EAAYb,EAAQc,QAAO,SAAA1C,GAAM,OAAIA,EAAOc,KAAOA,KACzDuB,EAAWI,MAgBL,cAAC,EAAD,CAAYP,aAbC,WACnB,IAAMS,EAAe5B,KAAKC,MAAMD,KAAKE,SAAWW,EAAQgB,QAClDT,EAASP,EAAQe,GACvBL,EAAUH,IAUoCA,OAAQA,YCzB3CU,MARf,WACE,OACE,8BACE,cAAC,EAAD,OCOSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.56c0361d.chunk.js","sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\nimport { Row, Col } from \"antd\";\n\nfunction MealForm(props) {\n  const [choose, setChoose] = useState(\"\");\n\n  const inputRef = useRef(null);\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleInputChange = e => {\n    setChoose(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    props.onSubmit({\n      id: Math.floor(Math.random() * 100000),\n      text: choose\n    });\n\n    setChoose(\"\");\n  };\n\n  return (\n    <Row justify=\"center\">\n      <Col xs={24} sm={20} md={12}>\n        <form onSubmit={handleSubmit}>\n          <input\n            ref={inputRef}\n            type=\"text\"\n            className=\"choose__input\"\n            value={choose}\n            onChange={handleInputChange}\n            name=\"text\"\n            placeholder=\"Some Ideas...\"\n          ></input>\n\n          <button className=\"add__btn\">Add</button>\n        </form>\n      </Col>\n    </Row>\n  );\n}\n\nexport default MealForm;\n","import React from \"react\";\n// import MealForm from \"./MealForm\";\nimport { RiDeleteBin6Line } from \"react-icons/ri\";\n\nfunction MealItem({ chooses, removeChoose }) {\n  return chooses.map((choose, index) => (\n    <div className=\"choose\" key={index}>\n      <div key={choose.id} className=\"choose__text\">\n        {choose.text}\n      </div>\n      <div className=\"icon__delete\">\n        <RiDeleteBin6Line\n          onClick={() => {\n            removeChoose(choose.id);\n          }}\n          className=\"delete__icon\"\n        />\n      </div>\n    </div>\n  ));\n}\n\nexport default MealItem;\n","import React from \"react\";\nimport { Row, Col } from \"antd\";\nfunction MealRandom({ chooses, randomChoose, result }) {\n  return (\n    <Row justify=\"center\">\n      <Col xs={23} sm={19} md={11}>\n        <div className=\"random__block\">\n          <button\n            className=\"random__btn\"\n            onClick={() => {\n              randomChoose(chooses);\n            }}\n          >\n            抽籤\n          </button>\n\n          <div className=\"random__result\">{result.text}</div>\n        </div>\n      </Col>\n    </Row>\n  );\n}\n\nexport default MealRandom;\n","import React, { useState } from \"react\";\nimport MealForm from \"./MealForm\";\nimport MealItem from \"./MealItem\";\nimport MealRandom from \"./MealRandom\";\nimport \"antd/dist/antd.css\";\nimport { Row, Col } from \"antd\";\nimport \"./Meal.css\";\nfunction MealList() {\n  const [chooses, setChooses] = useState([]);\n  const [result, setResult] = useState(\"\");\n  const addChoose = choose => {\n    if (!choose.text || /^\\s*$/.test(choose.text)) {\n      return;\n    }\n    const allChooses = [choose, ...chooses];\n    setChooses(allChooses);\n  };\n  const removeChoose = id => {\n    const removeArr = chooses.filter(choose => choose.id !== id);\n    setChooses(removeArr);\n  };\n\n  const randomChoose = () => {\n    const randomResult = Math.floor(Math.random() * chooses.length);\n    const result = chooses[randomResult];\n    setResult(result);\n  };\n\n  return (\n    <Row justify=\"center\">\n      <Col xs={22} sm={18} md={12}>\n        <div className=\"meal__list\">\n          <h2>If i have no idea..</h2>\n          <MealForm onSubmit={addChoose} />\n          <MealItem chooses={chooses} removeChoose={removeChoose} />\n          <MealRandom randomChoose={randomChoose} result={result} />\n        </div>\n      </Col>\n    </Row>\n  );\n}\n\nexport default MealList;\n","import MealList from \"./practice/MealList\";\n\nfunction App() {\n  return (\n    <div>\n      <MealList />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}